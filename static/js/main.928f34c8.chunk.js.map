{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC1B,OACE,sBAAKC,UAAU,sDAAf,UACE,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,aACrB,gCACE,6BAAKF,IACL,4BAAIC,WCaGK,EAlBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACjB,OACE,oCACEA,EAAOC,KAAI,SAACC,EAAMC,GAChB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,OAJvB,QCUWS,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC/B,OACE,qBAAKV,UAAU,MAAf,SACE,uBACEA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEHI,G,MATA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACGJ,EAAMK,aCwCEC,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEf,YAAac,EAAME,OAAOC,SAb1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRK,YAAa,IAJH,E,qDAQd,WAAqB,IAAD,OAClBmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAU,EAAKR,SAAS,CAAEpB,OAAQ4B,S,oBAO1C,WAAW,IAAD,EACsBC,KAAKN,MAA5BvB,EADC,EACDA,OAAQK,EADP,EACOA,YACTyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEvD,OAAQjC,EAAOmC,OAGb,sBAAKvC,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,CAAUlB,OAAQ8B,SANxB,oBAAIlC,UAAU,KAAd,4B,GA1BcwC,aCMHC,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.928f34c8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n  return (    \n    <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5 tc\">\n      <img alt=\"robots\" src={`https://robohash.org/${id}200x200`} />\n      <div>\n        <h2>{name}</h2>\n        <p>{email}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {  \n  return (\n    <div> {\n      robots.map((user, i) => {\n        return (\n          <Card \n            key={robots[i].id} \n            id={robots[i].id} \n            name={robots[i].name} \n            email={robots[i].email}\n          />\n        )     \n      })\n    } </div>\n    \n  );\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchField, searchChange}) => {\n  return (\n    <div className=\"pa2\">\n      <input \n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\" \n        placeholder=\"Search Robots\" \n        onChange={searchChange}\n      />      \n    </div>\n  );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n  return(\n    <div style={{ overflowY: 'scroll', border: '5px solid black', height: '700px'}}>\n      {props.children}\n    </div>\n    \n  );\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\nimport Scroll from '../components/Scroll';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchField: ''      \n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => {this.setState({ robots: users })});\n  }\n\n  onSearchChange = (event) => {  \n    this.setState({ searchField: event.target.value });  \n  }\n\n  render () {\n    const {robots, searchField} = this.state;\n    const filteredRobots = robots.filter(robot => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return !robots.length ? \n    <h1 className=\"tc\">Loading...</h1> :\n    (      \n      <div className=\"tc\">\n        <h1 className=\"f1\">RoboFriends</h1>\n        <SearchBox searchChange={this.onSearchChange}/>\n        <Scroll>\n          <CardList robots={filteredRobots} />      \n        </Scroll>        \n      </div>      \n    );      \n  };\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}